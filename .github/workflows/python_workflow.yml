name: Python workflow

on: [ push ]

defaults:
  run:
    working-directory: ./app_python

jobs:
  lint:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{runner.os}}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Pylint
        run: pylint $(git ls-files '*.py')
        continue-on-error: true

  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{runner.os}}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          python -m pytest tests/

  snyk:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [ lint, test ]
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - uses: snyk/actions/setup@master
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{runner.os}}-pip-${{hashFiles('**/requirements/*.txt')}}
          restore-keys: |
            ${{runner.os}}-pip-
      - name: Check vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          pip install -r requirements.txt
          snyk test --sarif-file-output=result.sarif
      - name: Upload to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: app_python/result.sarif

  container:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [ lint, test, snyk ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: DockerHub authentication
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup Build Action
        uses: docker/setup-buildx-action@v1
      - name: Build, Publish
        uses: docker/build-push-action@v2
        with:
          context: app_python
          file: app_python/Dockerfile
          push: true
          tags: aladdinych/devops_labs:latest
          cache-from: type=registry,ref=aladdinych/devops_labs:cache
          cache-to: type=registry,ref=aladdinych/devops_labs:cache,mode=max